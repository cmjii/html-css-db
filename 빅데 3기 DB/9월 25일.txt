database shop


- 제품 테이블 (product)
- 구매 테이블 (buy)

product 속성의 구성
create table product(
num int auto_increment,
type_a varchar(50) not null,
type_b varchar(50) not null,
name varchar(100) not null,
price int default 0,
amount int default 100,
sale_amount int default 0,
register_date datetime,
primary key(num)); 

insert into product (type_a,type_b,name,price,amount,sale_amount,register_date) values
('티셔츠','긴소매','폴라 티셔츠',15000,34,100,'2022-10-15'),
('티셔츠','반소매','순면라운드 반팔티',15900, 10, 153, '2022-09-15'),
('티셔츠','민소매','에이 나시', 9000, 33, 33, '2022-11-10'),
('패션운동복', '트레이닝상의', '피트니스상의', 30000, 34 , 55,'2022-11-05'),
('패션운동복', '트레이닝하의', '피트니스하의', 50000, 55 , 34,'2022-11-06'),
('아우터', '재킷', '양면 롱 후리스 자켓', 23300, 100, 42, '2022-11-05'),
('아우터', '코트', '양털 겨울 코트', 50000, 50, 30, '2022-10-31'),
('아우터', '패딩', '롱 패딩 점퍼', 47400, 10, 45, '2022-11-01');






buy 테이블
create table buy(
num int auto_increment,
customer varchar(20),
product_name varchar(100),
price int default 0,
amount int default 0,
buy_date datetime default now(),
primary key(num));

---------------------------------------------
홍길동이 폴라티셔츠 5개 구매
insert into buy (customer,product_name,price,amount) values
('홍길동','폴라 티셔츠',15000,5);

product 테이블에서 값을 조회하여 추가
홍길순 폴라 티셔츠 3장 구매 (num=1)

insert into buy(customer, product_name, price,amount)
select '홍길순', name, price, 3 from product where num=1;


- 5명이 여러가지 상품 구매
insert into buy(customer, product_name, price,amount)
select '홍길용', name, price, 3 from product where num=2;
insert into buy(customer, product_name, price,amount)
select '홍길송', name, price, 3 from product where num=3;
insert into buy(customer, product_name, price,amount)
select '홍길분', name, price, 3 from product where num=4;
insert into buy(customer, product_name, price,amount)
select '이동혁', name, price, 3 from product where num=8;
insert into buy(customer, product_name, price,amount)
select '홍길문', name, price, 3 from product where num=7;

- 제품별 판매 수량 조회
select product_name, sum(amount) from buy group by product_name;

- 제품별 판매 금액 조회
select product_name, sum(price) from buy group by product_name;

-total 필드 추가
price * amount 곱한 값으로 나타내기
(필드추가)
alter table buy add total int after amount;
(속성추가)
update buy set total = price * amount;


- 칼럼을 생성시 계산된 값을 자동으로 계산하여 생성할 때 사용
(generated columns)
- stored : 값이 저장되는 방식 
(데이터가 입력되거나, 수정 될 때, 해당 칼럼도 같이 갱신)
-virtual  : 데이터를 저장하지 않고 정의만
(해당 칼럼을 읽으려고 시도할 때 계산을 통해 보여주는 것만)

alter table buy add total int generated always as (price*amount) stored after amount;

insert into buy(customer, product_name, price,amount)
select '이동서', name, price, 2 from product where num=6;
insert into buy(customer, product_name, price,amount)
select '이동운', name, price, 5 from product where num=5;
insert into buy(customer, product_name, price,amount)
select '이동순', name, price, 1 from product where num=2;


- 전체 총 판매수량과 총 매출

select sum(amount) as '판매수량', sum(total) as '총 매출' from buy; 

-product 테이블에서
1. 최신 상품순으로 정렬 (날짜가 가장 늦게 들어온 제품)
select * from product order by register_date desc;

2. type_a 별로 상품 개수와 price 합계
select type_a, count(type_a), sum(price) from product group by type_a;

3. price 16000이상인 제품은 할인 상품에 해당 / 할인상품 출력
select * from product where price>=16000;

4. 할인 상품의 이름과 가격 출력
(할인가격 1.6이상 제품 대상으로 10%할인된 가격) (할인 상품명, 정상가, 할인가)
select name as '할인 상품명', price as '정상가', round(price*0.9,0) as'할인가' from product where price>=16000;

5. 11월에 입고된 상품만 출력
select * from product where register_date between '2022-11-01' and '2022-11-30';
select * from product where monthname(register_date) = 'november';
select * from product where month(register_date) = 11;

select month(register_date) as mon, sum(price) as sum from product group by mon order by mon;

년-월로 날짜 표시
select date_format(register_date, '%y-%m') as mon,
sum(price) as sum from product group by mon order by mon;

합계의 가장 큰 값을 출력
select type_a, sum(sale_amount) as sum from product 
group by type_a order by sum desc limit 0,1;


type_a 별로 판매량 합계를 출력 
select type_a, sum(sale_amount) as sum from product 
group by type_a order by sum desc limit 0,1;

type_a 별로 가장 큰 판매량의 판매량 합계를 출력 
select max(sum) from (
select type_a, sum(sale_amount) as sum
 from product  group by type_a) as p;

- replace 를 사용하여 '서울시' -> 서울특별시
update test2 set addr = replace(addr, '서울시', 서울특별시');

update test2 set addr = replace(addr, '시','특별시') where addr = '서울시';

-김순이 데이터 추가
insert into test2 (num,name,dep,addr) values 
(800,'이영이','컴퓨터학과','인천시');

-tel이 null인 학생을 검색
select*from test2 where tel is null;

-tel이 null인 자료를 미등록으로 수정
update test2 set tel = '미등록' where tel is null;

트랜잭션 (transaction)
- 하나의 작업을 하기 위한 명령어 묶음 단위
- 하나의 트랜잭션에서 실행하는 모든 명령어가 모두 완료되어야 전체가 완료되는 형태의 작업에서 사용
- 만약 하나라도 작업이 취소되면 모두 취소
- 완료와 취소를 나중에 결정하는 개념
- 임시 실행 개념
* 데이터의 안전성 확보를 위한 방법 = 트랜잭션

start transaction
명령어 1;
명령어 2;
...
commit; = 작업완료
rollback; = 작업취소

insert into test2(num, name, dep, addr) values

과제
1. buy테이블에서 customer의 이름을 홍0동 변경해서 출력만
select num, insert(customer,2,1,'0') as 'customer',  product_name, price, amount, total, buy_date from buy;
+----------+-----+---------------------+-------+--------+--------+---------------------+
| customer | num | product_name        | price | amount | total  | buy_date            |
+----------+-----+---------------------+-------+--------+--------+---------------------+
| 홍0동    |   1 | 폴라 티셔츠         | 15000 |      5 |  75000 | 2023-09-25 10:24:45 |
| 홍0순    |   2 | 폴라 티셔츠         | 15000 |      3 |  45000 | 2023-09-25 10:24:48 |
| 이0신    |   3 | 순면라운드 반팔티   | 15900 |      7 | 111300 | 2023-09-25 10:24:53 |
| 강0찬    |   4 | 에어 나시           |  9000 |      7 |  63000 | 2023-09-25 10:24:56 |
| 고0동    |   5 | 폴라 티셔츠         | 15000 |      7 | 105000 | 2023-09-25 10:25:03 |
| 이0신    |   6 | 순면라운드 반팔티   | 15900 |      7 | 111300 | 2023-09-25 10:53:14 |
| 김0이    |   7 | 양면 롱 후리스 자켓 | 23300 |     10 | 233000 | 2023-09-25 10:53:17 |
| 이0이    |   8 | 롱 패딩 점퍼        | 47400 |     13 | 616200 | 2023-09-25 10:53:22 |
+----------+-----+---------------------+-------+--------+--------+---------------------+
8 rows in set (0.00 sec)

2. product 테이블에서 price가 40000이상인 데이터만 / 상품명(할인상품)으로 표시하여 출력 (수정 X 조회만)
select concat(name,'(할인상품)') as '상품명'  from product where price >=40000;
+--------------------------+
| 상품명                   |
+--------------------------+
| 피트니스하의(할인상품)   |
| 양면 겨울 코트(할인상품) |
| 롱 패딩 점퍼(할인상품)   |
+--------------------------+
3 rows in set (0.00 sec)

3.월별 매출(price*sale_amount)합계 출력
select date_format(register_date,'%y-%m')날짜,sum(price*sale_amount) as '매출' from product group by 날짜;

4.price가 가장 높은 (가장비싼) 제품명, price 출력
select name from product order by price desc limit 1;
+--------------+
| name         |
+--------------+
| 피트니스하의 |
+--------------+


5. buy테이블의 구매 내역을 추가하시오 (3개) -> product에서 조회하여 추가
insert into buy(customer, product_name, price, amount)
select'이순이',name,price,2 from product where num=2;
insert into buy(customer, product_name, price, amount)
select'삼순이',name,price,1 from product where num=4;
insert into buy(customer, product_name, price, amount)
select'사순이',name,price,3 from product where num=5;

+-----+----------+---------------------+-------+--------+--------+---------------------+
| num | customer | product_name        | price | amount | total  | buy_date            |
+-----+----------+---------------------+-------+--------+--------+---------------------+
|   1 | 홍길동   | 폴라 티셔츠         | 15000 |      5 |  75000 | 2023-09-25 10:24:45 |
|   2 | 홍길순   | 폴라 티셔츠         | 15000 |      3 |  45000 | 2023-09-25 10:24:48 |
|   3 | 이순신   | 순면라운드 반팔티   | 15900 |      7 | 111300 | 2023-09-25 10:24:53 |
|   4 | 강감찬   | 에어 나시           |  9000 |      7 |  63000 | 2023-09-25 10:24:56 |
|   5 | 고길동   | 폴라 티셔츠         | 15000 |      7 | 105000 | 2023-09-25 10:25:03 |
|   6 | 이순신   | 순면라운드 반팔티   | 15900 |      7 | 111300 | 2023-09-25 10:53:14 |
|   7 | 김영이   | 양면 롱 후리스 자켓 | 23300 |     10 | 233000 | 2023-09-25 10:53:17 |
|   8 | 이순이   | 롱 패딩 점퍼        | 47400 |     13 | 616200 | 2023-09-25 10:53:22 |
|   9 | 이순이   | 순면라운드 반팔티   | 15900 |      2 |  31800 | 2023-09-25 14:55:22 |
|  10 | 삼순이   | 피트니스상의        | 30000 |      1 |  30000 | 2023-09-25 14:55:22 |
|  11 | 사순이   | 피트니스하의        | 50000 |      3 | 150000 | 2023-09-25 14:55:24 |
+-----+----------+---------------------+-------+--------+--------+---------------------+
11 rows in set (0.00 sec)


6. product_non 테이블을 product 테이블과 같은 형식으로 추가하여, register_date의 9월 데이터를 이동하시오. 
-> 기존 product 테이블에서 제거 -> 단, transaction을 이용하여 첫 과정부터 완료되었을 때 commit하기
create table product_non like product;
desc product_non;
+---------------+--------------+------+-----+---------+----------------+
| Field         | Type         | Null | Key | Default | Extra          |
+---------------+--------------+------+-----+---------+----------------+
| num           | int          | NO   | PRI | NULL    | auto_increment |
| type_a        | varchar(50)  | NO   |     | NULL    |                |
| type_b        | varchar(50)  | NO   |     | NULL    |                |
| name          | varchar(100) | NO   |     | NULL    |                |
| price         | int          | YES  |     | 0       |                |
| amount        | int          | YES  |     | 100     |                |
| sale_amount   | int          | YES  |     | 0       |                |
| register_date | datetime     | YES  |     | NULL    |                |
+---------------+--------------+------+-----+---------+----------------+
start transaction;
insert into product_non select * from product where month(register_date)=9;
+-----+--------+--------+-------------------+-------+--------+-------------+---------------------+
| num | type_a | type_b | name              | price | amount | sale_amount | register_date       |
+-----+--------+--------+-------------------+-------+--------+-------------+---------------------+
|   2 | 티셔츠 | 반소매 | 순면라운드 반팔티 | 15900 |     10 |         153 | 2022-09-15 00:00:00 |
+-----+--------+--------+-------------------+-------+--------+-------------+---------------------+
1 row in set (0.00 sec)
delete from product where month(register_date)=9;

+-----+------------+--------------+---------------------+-------+--------+-------------+---------------------+
| num | type_a     | type_b       | name                | price | amount | sale_amount | register_date       |
+-----+------------+--------------+---------------------+-------+--------+-------------+---------------------+
|   1 | 티셔츠     | 긴소매       | 폴라 티셔츠         | 15000 |     34 |         100 | 2022-10-15 00:00:00 |
|   3 | 티셔츠     | 민소매       | 에어 나시           |  9000 |     33 |          33 | 2022-11-10 00:00:00 |
|   4 | 패션운동복 | 트레이닝상의 | 피트니스상의        | 30000 |     34 |          55 | 2022-11-05 00:00:00 |
|   5 | 패션운동복 | 트레이닝하의 | 피트니스하의        | 50000 |     55 |          34 | 2022-11-06 00:00:00 |
|   6 | 아우터     | 재킷         | 양면 롱 후리스 자켓 | 23300 |    100 |          42 | 2022-11-05 00:00:00 |
|   7 | 아우터     | 코트         | 양면 겨울 코트      | 50000 |     50 |          30 | 2022-10-31 00:00:00 |
|   8 | 아우터     | 패딩         | 롱 패딩 점퍼        | 47400 |     10 |          45 | 2022-11-01 00:00:00 |
+-----+------------+--------------+---------------------+-------+--------+-------------+---------------------+
commit;

7. 가장 많이 판매한 제품의 이름(name)을 출력 ->buy 테이블 기준
select product_name from buy group by product_name order by sum(amount) desc limit 1;
+-------------------+
| product_name      |
+-------------------+
| 순면라운드 반팔티 |
+-------------------+
